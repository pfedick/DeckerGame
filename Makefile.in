CXX			= @CXX@
EXTRA_CFLAGS = -ggdb -Wall
INCLUDE	= -Iinclude -Ipplib/include -I/mingw64/include/SDL2
CPPFLAGS	= @CPPFLAGS@
CXXFLAGS	= @CXXFLAGS@
CFLAGS		=  $(INCLUDE) $(EXTRA_CFLAGS) @CXXFLAGS@ @CFLAGS@ @DEFS@  @PTHREAD_CFLAGS@ 	@ZLIB_CFLAGS@ @BZ2_CFLAGS@ @PCRE_CFLAGS@ @ICONV_CFLAGS@ \
	@MPG123_CFLAGS@	@SDL2_CFLAGS@ @FT2_CFLAGS@
LDFLAGS		= @LDFLAGS@
LIBS_PPL7 = pplib/release/libppl7-tk.a  pplib/release/libppl7-audio.a  pplib/release/libppl7-gfx.a  pplib/release/libppl7-core.a

LIBS		= $(LIBS_PPL7)  \
	@LIBS@ @PTHREAD_CFLAGS@ @PTHREAD_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @PCRE_LIBS@ \
	@FT2_LIBS@ @PNG_LIBS@ @ICONV_LIBS@ @MPG123_LIBS@ @SDL2_LIBS@ -lstdc++

TEXMAKER_LIBS		= pplib/release/libppl7-gfx.a  pplib/release/libppl7-core.a  \
	@LIBS@ @PTHREAD_CFLAGS@ @PTHREAD_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @PCRE_LIBS@ \
	@FT2_LIBS@ @PNG_LIBS@ @ICONV_LIBS@ -lstdc++


PROGRAM	= decker

OBJECTS=compile/main.o \
	compile/sdl.o \
	compile/game.o \
	compile/sprite.o \
	compile/level.o \
	compile/fps.o \
	compile/ui_statusbar.o \
	compile/ui_menue.o \
	compile/ui_tileselection.o \
	compile/ui_scrollbar.o \
	compile/plane.o \
	compile/tile.o \
	compile/player.o 
	
	
TEXMAKER_OBJECTS	= compile/texm_main.o compile/texm_texture.o compile/texm_texturefile.o

$(PROGRAM): ppl7 $(OBJECTS)
	$(CXX) -o $(PROGRAM) $(OBJECTS) $(LIBS)
	-chmod 755 $(PROGRAM)

all: $(PROGRAM) texmaker


ppl7:
	-mkdir -p pplib/release
	cd pplib && $(MAKE) release/libppl7-core.a
	cd pplib && $(MAKE) release/libppl7-gfx.a
	cd pplib && $(MAKE) release/libppl7-tk.a
	cd pplib && $(MAKE) release/libppl7-audio.a
	
texmaker: $(TEXMAKER_OBJECTS) ppl7
	$(CXX) -o texmaker $(TEXMAKER_OBJECTS) $(TEXMAKER_LIBS)
	-chmod 755 texmaker

clean:
	-rm -f compile/*.o $(PROGRAM) texmaker *.core
	cd pplib && $(MAKE) clean
	
sprites:
	./texmaker -s lightwave/Render/george/*.png -t res/george.tex -w 1024 -h 1024 -px 128 -py 127 -x res/george
	./texmaker -s lightwave/Render/tiles/*.png -t res/tiles.tex -w 512 -h 512 -px 0 -py 0 -x res/tiles
	#./texmaker -s lightwave/Render/tiles/*.png -t res/tiles.tex -w 512 -h 512 --pivot_detection bricks -x res/tiles
	./texmaker -f res/cursor/cursor.lst -t res/cursor.tex -w 128 -h 128 -px 0 -py 0
	
compile/main.o: src/main.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/main.o -c src/main.cpp $(CFLAGS)
	
compile/sdl.o: src/sdl.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/sdl.o -c src/sdl.cpp $(CFLAGS)

compile/game.o: src/game.cpp Makefile include/decker.h include/ui.h
	-mkdir -p compile 
	$(CXX) -o compile/game.o -c src/game.cpp $(CFLAGS)

compile/sprite.o: src/sprite.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/sprite.o -c src/sprite.cpp $(CFLAGS)

compile/level.o: src/level.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/level.o -c src/level.cpp $(CFLAGS)

compile/fps.o: src/fps.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/fps.o -c src/fps.cpp $(CFLAGS)

compile/plane.o: src/plane.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/plane.o -c src/plane.cpp $(CFLAGS)

compile/tile.o: src/tile.cpp Makefile include/decker.h
	-mkdir -p compile 
	$(CXX) -o compile/tile.o -c src/tile.cpp $(CFLAGS)

compile/player.o: src/player.cpp Makefile include/player.h
	-mkdir -p compile 
	$(CXX) -o compile/player.o -c src/player.cpp $(CFLAGS)

compile/ui_statusbar.o: src/ui/statusbar.cpp Makefile include/ui.h
	-mkdir -p compile 
	$(CXX) -o compile/ui_statusbar.o -c src/ui/statusbar.cpp $(CFLAGS)

compile/ui_menue.o: src/ui/menue.cpp Makefile include/ui.h
	-mkdir -p compile 
	$(CXX) -o compile/ui_menue.o -c src/ui/menue.cpp $(CFLAGS)

compile/ui_tileselection.o: src/ui/tileselection.cpp Makefile include/ui.h
	-mkdir -p compile 
	$(CXX) -o compile/ui_tileselection.o -c src/ui/tileselection.cpp $(CFLAGS)

compile/ui_scrollbar.o: src/ui/scrollbar.cpp Makefile include/ui.h
	-mkdir -p compile 
	$(CXX) -o compile/ui_scrollbar.o -c src/ui/scrollbar.cpp $(CFLAGS)


compile/texm_main.o: tools/texmaker/main.cpp Makefile tools/texmaker/texmaker.h
	-mkdir -p compile 
	$(CXX) -o compile/texm_main.o -c tools/texmaker/main.cpp $(CFLAGS)
	
compile/texm_texture.o: tools/texmaker/texture.cpp Makefile tools/texmaker/texmaker.h
	-mkdir -p compile 
	$(CXX) -o compile/texm_texture.o -c tools/texmaker/texture.cpp $(CFLAGS)
	
compile/texm_texturefile.o: tools/texmaker/texturefile.cpp Makefile tools/texmaker/texmaker.h
	-mkdir -p compile 
	$(CXX) -o compile/texm_texturefile.o -c tools/texmaker/texturefile.cpp $(CFLAGS)
	