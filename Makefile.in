VERSION ?= 0.6.0
BUILD_NUMBER := $(shell git rev-list --all --count)
BUILDDATE := $(shell date '+%Y%m%d')

CXX			= @CXX@
EXTRA_CFLAGS = -ggdb -Wall
INCLUDE	= -Iinclude -Ipplib/include -I/mingw64/include/SDL2
CPPFLAGS	= @CPPFLAGS@
CXXFLAGS	= @CXXFLAGS@
CFLAGS		=  $(INCLUDE) $(EXTRA_CFLAGS) @CXXFLAGS@ @CFLAGS@ @DEFS@  @PTHREAD_CFLAGS@ 	@ZLIB_CFLAGS@ @BZ2_CFLAGS@ @PCRE_CFLAGS@ @ICONV_CFLAGS@ \
	@MPG123_CFLAGS@	@SDL2_CFLAGS@ -I/usr/include/ffmpeg
LDFLAGS		= @LDFLAGS@
LIBS_PPL7 = pplib/release/libppl7-tk.a  pplib/release/libppl7-audio.a  pplib/release/libppl7-gfx.a  pplib/release/libppl7-core.a
LIBAV = -lavcodec -lavformat -lswresample -lswscale -lavutil
LIBS		= $(LIBS_PPL7)  \
	@LIBS@ $(LIBAV) @PTHREAD_CFLAGS@ @PTHREAD_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @PCRE_LIBS@ \
	@PNG_LIBS@ @ICONV_LIBS@ @MPG123_LIBS@ @SDL2_LIBS@ \
	-lstdc++

TEXMAKER_LIBS		= pplib/release/libppl7-gfx.a  pplib/release/libppl7-core.a  \
	@LIBS@ @PTHREAD_CFLAGS@ @PTHREAD_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @PCRE_LIBS@ \
	@PNG_LIBS@ @ICONV_LIBS@ -lstdc++
TEXMAKER_CFLAGS		=  $(INCLUDE) $(EXTRA_CFLAGS) @CXXFLAGS@ @CFLAGS@ @DEFS@  @PTHREAD_CFLAGS@ 	@ZLIB_CFLAGS@ @BZ2_CFLAGS@ @PCRE_CFLAGS@ @ICONV_CFLAGS@



PROGRAM	= decker

OBJECTS=compile/main.o \
	compile/sdl.o \
	compile/game.o \
	compile/spritetexture.o \
	compile/level.o \
	compile/fps.o \
	compile/config.o \
	compile/translate.o \
	compile/ui_statusbar.o \
	compile/ui_menue.o \
	compile/ui_tileselection.o \
	compile/ui_spriteselection.o \
	compile/ui_tiletypeselection.o \
	compile/ui_tilesframe.o \
	compile/ui_worldwidget.o \
	compile/ui_objectselection.o \
	compile/ui_waynetedit.o \
	compile/widgets_scrollbar.o \
	compile/widgets_checkbox.o \
	compile/widgets_radiobutton.o \
	compile/widgets_groupbox.o \
	compile/widgets_combobox.o \
	compile/widgets_listwidget.o \
	compile/widgets_dialog.o \
	compile/widgets_filedialog.o \
	compile/widgets_slider.o \
	compile/plane.o \
	compile/tiletype.o \
	compile/tile.o \
	compile/spritesystem.o \
	compile/brickoccupation.o \
	compile/player.o \
	compile/physic.o \
	compile/animation.o \
	compile/resources.o \
	compile/waynet.o \
	compile/objectsystem.o \
	compile/object.o \
	compile/object_gem.o \
	compile/object_coin.o \
	compile/object_trap.o \
	compile/object_threespeers.o \
	compile/object_laserbarrier.o \
	compile/object_enemy.o \
	compile/object_rat.o \
	compile/object_bat.o \
	compile/object_scorpion.o \
	compile/object_hangingspider.o \
	compile/object_savepoint.o \
	compile/object_medikit.o \
	compile/object_key.o \
	compile/object_arrow.o \
	compile/object_door.o \
	compile/object_floater.o \
	compile/object_playerstartpoint.o \
	compile/object_breakingground.o \
	compile/object_skeleton.o \
	compile/object_mummy.o \
	compile/object_fire.o \
	compile/object_windemitter.o \
	compile/object_vent.o \
	compile/object_speaker.o \
	compile/object_touchemitter.o \
	compile/object_mushroom.o \
	compile/object_treasurechest.o \
	compile/object_warpgate.o \
	compile/object_scarabeus.o \
	compile/object_switch.o \
	compile/object_stamper.o \
	compile/object_ai_figure.o \
	compile/object_wallenstein.o \
	compile/object_helena.o \
	compile/audio_audiosystem.o \
	compile/audio_audiostream.o \
	compile/audio_audiosample.o \
	compile/audio_audioinstance.o \
	compile/audio_audiopool.o \
	compile/video_videoplayer.o \
	compile/intro_screen.o \
	compile/start_screen.o \
	compile/settings_screen.o \
	compile/level_screen.o




TEXMAKER_OBJECTS	= compile/texm_main.o compile/texm_texture.o compile/texm_texturefile.o

$(PROGRAM): update_version ppl7 $(OBJECTS)
	$(CXX) -o $(PROGRAM) $(OBJECTS) $(LIBS)
	-chmod 755 $(PROGRAM)

all: update_version $(PROGRAM) texmaker

mingw: update_version
	rm -rf release/deploy
	mkdir -p release/deploy
	mingw32-make -j ppl7
	mingw32-make -j $(PROGRAM)
	ldd decker.exe  | grep -v WINDOWS | grep mingw64 | awk '{print $$3}' | while read line  ; do cp $${line} release/deploy; done

	cat setup.tpl.iss | sed "s/^AppVersion=.*/AppVersion=${VERSION}.${BUILD_NUMBER}/"  \
		| sed "s/^AppVerName=.*/AppVerName=GeorgeDecker ${VERSION}/"  \
		| sed "s/^VersionInfoVersion=.*/VersionInfoVersion=${VERSION}/"  \
		| sed "s/^OutputBaseFilename=.*/OutputBaseFilename=GeorgeDecker-${VERSION}-Setup/"  \
		> setup.iss

setup: mingw
	"C:\Program Files (x86)\Inno Setup 5\ISCC.exe" setup.iss


ppl7:
	-mkdir -p pplib/release
	cd pplib && $(MAKE) -j release/libppl7-core.a
	cd pplib && $(MAKE) -j release/libppl7-gfx.a
	cd pplib && $(MAKE) -j release/libppl7-tk.a
	cd pplib && $(MAKE) -j release/libppl7-audio.a

texmaker: $(TEXMAKER_OBJECTS) ppl7
	$(CXX) -o texmaker $(TEXMAKER_OBJECTS) $(TEXMAKER_LIBS)
	-chmod 755 texmaker

fixbricks: compile/fixbricks_main.o
	$(CXX) -o fixbricks compile/fixbricks_main.o $(TEXMAKER_LIBS)
	-chmod 755 fixbricks
	./fixbricks

mergeintro: compile/mergeintro_main.o
	$(CXX) -o mergeintro compile/mergeintro_main.o $(TEXMAKER_LIBS)
	-chmod 755 mergeintro


clean:
	-rm -f compile/*.o $(PROGRAM) *.core

cleanall:
	-rm -f compile/*.o $(PROGRAM) texmaker mergeintro fixbricks *.core
	cd pplib && $(MAKE) clean

sprites:
	./texmaker -s "lightwave/Render/george/*.png" -t res/george.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "lightwave/Render/george_adventure/" -t res/george_adventure.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "res/tiletypes/*.png" -t res/tiletypes.tex -w 256 -h 256 -px 0 -py 0 -x res/tiletypes
	./texmaker -f res/cursor/cursor.lst -t res/cursor.tex -w 128 -h 128 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_nature/*.png" -t res/sprites_nature.tex -w 2048 -h 2048 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/sprites_nature_ui/*.png" -t res/sprites_nature_ui.tex -w 512 -h 512 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_plants/*.png" -t res/sprites_plants.tex -w 2048 -h 2048 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/sprites_plants_ui/*.png" -t res/sprites_plants_ui.tex -w 512 -h 512 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_objects/*.png" -t res/sprites_objects.tex -w 2048 -h 2048 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/sprites_objects_ui/*.png" -t res/sprites_objects_ui.tex -w 512 -h 512 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_nature_blury/*.png" -t res/sprites_nature_blury.tex -w 2048 -h 2048 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/sprites_nature_blury_ui/*.png" -t res/sprites_nature_blury_ui.tex -w 512 -h 512 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_rocks/*.png" -t res/sprites_rocks.tex -w 2048 -h 2048 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/sprites_rocks_ui/*.png" -t res/sprites_rocks_ui.tex -w 512 -h 512 -px 0 -py 0
	./texmaker -s "lightwave/Render/sprites_flowers/*.png" -t res/sprites_flowers.tex -w 1024 -h 1024 -px 32 -py 32
	./texmaker -s "lightwave/Render/sprites_flowers/*.png" -t res/sprites_flowers_ui.tex -w 1024 -h 1024 -px 0 -py 0

	./texmaker -s "lightwave/Render/objects/treasure/*.png" -t res/sprites_treasure.tex -w 1024 -h 1024 -px 64 -py 110
	./texmaker -s "lightwave/Render/objects/treasure_ui/*.png" -t res/sprites_treasure_ui.tex -w 512 -h 512 -px 0 -py 0

	./texmaker -s "res/solidcolor/*.png" -t res/bricks_solid.tex -w 512 -h 512 -px 0 -py 76
	./texmaker -s "res/solidcolor/*.png" -t res/bricks_solid_ui.tex -w 512 -h 512 -px 0 -py 0


	./texmaker -s "lightwave/Render/bricks_white_ui/*.png" -t res/bricks_white_ui.tex -w 1024 -h 1024 -px 0 -py 0
	./texmaker -s "lightwave/Render/bricks_white/*.png" -t res/bricks_white.tex -w 1024 -h 1024 -px 0 -py 160
	./texmaker -s "lightwave/Render/objects/ui/*.png" -t res/objects_ui.tex -w 1024 -h 1024 -px 0 -py 0
	./texmaker -s "lightwave/Render/objects/interactive/*.png" -t res/objects.tex -w 1024 -h 1024 -px 128 -py 250

	./texmaker -s "lightwave/Render/enemies/3speers/*.png" -t res/enemy_3speers.tex -w 1024 -h 1024 -px 256 -py 255 --pivot_detection lower_middle
	./texmaker -s "lightwave/Render/mummy/*.png" -t res/mummy.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "lightwave/Render/skeleton/*.png" -t res/skeleton.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "lightwave/Render/objects/vent/*.png" -t res/vent.tex -w 1024 -h 1024 --pivot_detection lower_middle
	./texmaker -s lightwave/Render/enemies/mushroom/ -t res/mushroom.tex -w 512 -h 512 -px 32 -py 49
	./texmaker -s lightwave/Render/enemies/scarabeus/ -t res/scarabeus.tex -w 512 -h 512 -px 32 -py 55
	./texmaker -s "lightwave/Render/enemies/wallenstein/*.png" -t res/wallenstein.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "lightwave/Render/enemies/helena/*.png" -t res/helena.tex -w 1024 -h 1024 -px 128 -py 195
	./texmaker -s "lightwave/Render/enemies/bat/*.png" -t res/bat.tex -w 512 -h 512 -px 64 -py 120

	./texmaker -s "lightwave/Render/enemies/stamper_vertical/*.png" -t res/stamper_vertical.tex -w 1024 -h 1024 -px 64 -py 271
	./texmaker -s "lightwave/Render/objects/laser/*.png" -t res/laser.tex -w 256 -h 256 -px 16 -py 16
	./texmaker -s "lightwave/Render/objects/treasure_chest/*.png" -t res/treasure_chest.tex -w 1024 -h 1024 -px 128 -py 242
	./texmaker -s "lightwave/Render/objects/doors/*.png" -t res/doors.tex -w 1024 -h 1024 -px 144 -py 242


fonts:
	- rm -rf res/*.fnt6
	pplfontmaker -t res/notosans-black.fnt6 -q /usr/share/fonts/google-noto/NotoSans-Black.ttf -s "12,14,16,18,20,30,40,50" --idn --aa4 -n "NotoSans-Black" --zlib -6
	pplfontmaker -t res/notosans.fnt6 -q /usr/share/fonts/google-noto/NotoSans-Regular.ttf -s "8,10,12,14,16,18,20" --idn --aa4 -n "NotoSans" --zlib -6
	pplfontmaker -t res/notosans.fnt6 -q /usr/share/fonts/google-noto/NotoSans-Bold.ttf -s "8,10,12,14,16,18,20" --idn --aa4 -n "NotoSans" --zlib -6 --isbold


update_version:
	@mkdir -p tmp
	@echo "#ifndef VERSION_H_" > tmp/version.h
	@echo "#define VERSION_H_" >> tmp/version.h
	@echo "#define DECKER_VERSION \"$(VERSION)\"" >> tmp/version.h
	@echo "#define DECKER_REVSION \"$(BUILD_NUMBER)\"" >> tmp/version.h
	@echo "#define DECKER_BUILDDATE $(BUILDDATE)" >> tmp/version.h
	@echo "#endif" >> tmp/version.h
	@diff tmp/version.h include/version.h > /dev/null 2>&1; if [ $$? -ne 0 ] ; then cp tmp/version.h include/version.h; fi


compile/main.o: src/main.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/main.o -c src/main.cpp $(CFLAGS)

compile/sdl.o: src/sdl.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/sdl.o -c src/sdl.cpp $(CFLAGS)

compile/game.o: src/game.cpp Makefile include/decker.h include/ui.h include/objects.h include/audio.h include/translate.h
	- @mkdir -p compile
	$(CXX) -o compile/game.o -c src/game.cpp $(CFLAGS)

compile/spritetexture.o: src/spritetexture.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/spritetexture.o -c src/spritetexture.cpp $(CFLAGS)

compile/resources.o: src/resources.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/resources.o -c src/resources.cpp $(CFLAGS)

compile/level.o: src/level.cpp Makefile include/decker.h include/objects.h \
	include/waynet.h
	- @mkdir -p compile
	$(CXX) -o compile/level.o -c src/level.cpp $(CFLAGS)

compile/fps.o: src/fps.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/fps.o -c src/fps.cpp $(CFLAGS)

compile/config.o: src/config.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/config.o -c src/config.cpp $(CFLAGS)

compile/translate.o: src/translate.cpp Makefile include/translate.h
	- @mkdir -p compile
	$(CXX) -o compile/translate.o -c src/translate.cpp $(CFLAGS)

compile/plane.o: src/plane.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/plane.o -c src/plane.cpp $(CFLAGS)

compile/tiletype.o: src/tiletype.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/tiletype.o -c src/tiletype.cpp $(CFLAGS)

compile/spritesystem.o: src/spritesystem.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/spritesystem.o -c src/spritesystem.cpp $(CFLAGS)

compile/objectsystem.o: src/objectsystem.cpp Makefile include/objects.h include/decker.h include/wallenstein.h include/player.h
	- @mkdir -p compile
	$(CXX) -o compile/objectsystem.o -c src/objectsystem.cpp $(CFLAGS)

compile/waynet.o: src/waynet.cpp Makefile include/waynet.h
	- @mkdir -p compile
	$(CXX) -o compile/waynet.o -c src/waynet.cpp $(CFLAGS)

compile/object.o: src/objects/object.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object.o -c src/objects/object.cpp $(CFLAGS)

compile/object_gem.o: src/objects/gem.cpp Makefile include/objects.h include/animation.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_gem.o -c src/objects/gem.cpp $(CFLAGS)

compile/object_coin.o: src/objects/coin.cpp Makefile include/objects.h include/animation.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_coin.o -c src/objects/coin.cpp $(CFLAGS)

compile/object_trap.o: src/objects/trap.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_trap.o -c src/objects/trap.cpp $(CFLAGS)

compile/object_threespeers.o: src/objects/threespeers.cpp Makefile include/objects.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_threespeers.o -c src/objects/threespeers.cpp $(CFLAGS)

compile/object_laserbarrier.o: src/objects/laserbarrier.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_laserbarrier.o -c src/objects/laserbarrier.cpp $(CFLAGS)

compile/object_enemy.o: src/objects/enemy.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_enemy.o -c src/objects/enemy.cpp $(CFLAGS)

compile/object_rat.o: src/objects/rat.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_rat.o -c src/objects/rat.cpp $(CFLAGS)

compile/object_hangingspider.o: src/objects/hangingspider.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_hangingspider.o -c src/objects/hangingspider.cpp $(CFLAGS)

compile/object_key.o: src/objects/key.cpp Makefile include/objects.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_key.o -c src/objects/key.cpp $(CFLAGS)

compile/object_door.o: src/objects/door.cpp Makefile include/objects.h include/animation.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_door.o -c src/objects/door.cpp $(CFLAGS)

compile/object_floater.o: src/objects/floater.cpp Makefile include/objects.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_floater.o -c src/objects/floater.cpp $(CFLAGS)

compile/object_medikit.o: src/objects/medikit.cpp Makefile include/objects.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_medikit.o -c src/objects/medikit.cpp $(CFLAGS)

compile/object_savepoint.o: src/objects/savepoint.cpp Makefile include/objects.h include/animation.h include/player.h include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_savepoint.o -c src/objects/savepoint.cpp $(CFLAGS)

compile/object_arrow.o: src/objects/arrow.cpp Makefile include/objects.h include/animation.h \
	include/player.h include/audiopool.h include/widgets.h include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/object_arrow.o -c src/objects/arrow.cpp $(CFLAGS)

compile/object_treasurechest.o: src/objects/treasurechest.cpp Makefile include/objects.h include/animation.h \
	include/player.h include/audiopool.h include/widgets.h include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/object_treasurechest.o -c src/objects/treasurechest.cpp $(CFLAGS)

compile/object_warpgate.o: src/objects/warpgate.cpp Makefile include/objects.h include/animation.h \
	include/player.h include/audiopool.h include/widgets.h include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/object_warpgate.o -c src/objects/warpgate.cpp $(CFLAGS)

compile/object_playerstartpoint.o: src/objects/playerstartpoint.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_playerstartpoint.o -c src/objects/playerstartpoint.cpp $(CFLAGS)

compile/object_mummy.o: src/objects/mummy.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_mummy.o -c src/objects/mummy.cpp $(CFLAGS)

compile/object_bat.o: src/objects/bat.cpp Makefile include/objects.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_bat.o -c src/objects/bat.cpp $(CFLAGS)

compile/object_scorpion.o: src/objects/scorpion.cpp Makefile include/objects.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_scorpion.o -c src/objects/scorpion.cpp $(CFLAGS)

compile/object_skeleton.o: src/objects/skeleton.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_skeleton.o -c src/objects/skeleton.cpp $(CFLAGS)

compile/object_mushroom.o: src/objects/mushroom.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_mushroom.o -c src/objects/mushroom.cpp $(CFLAGS)

compile/object_scarabeus.o: src/objects/scarabeus.cpp Makefile include/objects.h \
	include/player.h include/audiopool.h include/widgets.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_scarabeus.o -c src/objects/scarabeus.cpp $(CFLAGS)

compile/object_breakingground.o: src/objects/breakingground.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_breakingground.o -c src/objects/breakingground.cpp $(CFLAGS)

compile/object_fire.o: src/objects/fire.cpp Makefile include/objects.h include/audiopool.h \
	include/player.h
	- @mkdir -p compile
	$(CXX) -o compile/object_fire.o -c src/objects/fire.cpp $(CFLAGS)

compile/object_windemitter.o: src/objects/windemitter.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_windemitter.o -c src/objects/windemitter.cpp $(CFLAGS)

compile/object_vent.o: src/objects/vent.cpp Makefile include/objects.h \
	include/audiopool.h
	- @mkdir -p compile
	$(CXX) -o compile/object_vent.o -c src/objects/vent.cpp $(CFLAGS)

compile/object_speaker.o: src/objects/speaker.cpp Makefile include/objects.h \
	include/audiopool.h include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/object_speaker.o -c src/objects/speaker.cpp $(CFLAGS)

compile/object_touchemitter.o: src/objects/touchemitter.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_touchemitter.o -c src/objects/touchemitter.cpp $(CFLAGS)

compile/object_switch.o: src/objects/switch.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_switch.o -c src/objects/switch.cpp $(CFLAGS)

compile/object_stamper.o: src/objects/stamper.cpp Makefile include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/object_stamper.o -c src/objects/stamper.cpp $(CFLAGS)

compile/object_ai_figure.o: src/objects/ai_figure.cpp Makefile include/objects.h include/physic.h \
	include/ai_figure.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_ai_figure.o -c src/objects/ai_figure.cpp $(CFLAGS)

compile/object_wallenstein.o: src/objects/wallenstein.cpp Makefile include/objects.h include/physic.h \
	include/ai_figure.h include/wallenstein.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_wallenstein.o -c src/objects/wallenstein.cpp $(CFLAGS)

compile/object_helena.o: src/objects/helena.cpp Makefile include/objects.h include/physic.h \
	include/ai_figure.h include/helena.h include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/object_helena.o -c src/objects/helena.cpp $(CFLAGS)

compile/tile.o: src/tile.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/tile.o -c src/tile.cpp $(CFLAGS)

compile/player.o: src/player.cpp Makefile include/player.h include/animation.h include/decker.h include/objects.h include/physic.h
	- @mkdir -p compile
	$(CXX) -o compile/player.o -c src/player.cpp $(CFLAGS)

compile/physic.o: src/physic.cpp Makefile include/player.h include/decker.h include/physic.h
	- @mkdir -p compile
	$(CXX) -o compile/physic.o -c src/physic.cpp $(CFLAGS)

compile/animation.o: src/animation.cpp Makefile include/animation.h
	- @mkdir -p compile
	$(CXX) -o compile/animation.o -c src/animation.cpp $(CFLAGS)

compile/brickoccupation.o: src/brickoccupation.cpp Makefile include/decker.h
	- @mkdir -p compile
	$(CXX) -o compile/brickoccupation.o -c src/brickoccupation.cpp $(CFLAGS)

# Userinterface
compile/ui_statusbar.o: src/ui/statusbar.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_statusbar.o -c src/ui/statusbar.cpp $(CFLAGS)

compile/ui_menue.o: src/ui/menue.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_menue.o -c src/ui/menue.cpp $(CFLAGS)

compile/ui_tileselection.o: src/ui/tileselection.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_tileselection.o -c src/ui/tileselection.cpp $(CFLAGS)

compile/ui_spriteselection.o: src/ui/spriteselection.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_spriteselection.o -c src/ui/spriteselection.cpp $(CFLAGS)

compile/ui_objectselection.o: src/ui/objectselection.cpp Makefile include/ui.h include/objects.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_objectselection.o -c src/ui/objectselection.cpp $(CFLAGS)

compile/ui_tiletypeselection.o: src/ui/tiletypeselection.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_tiletypeselection.o -c src/ui/tiletypeselection.cpp $(CFLAGS)

compile/ui_tilesframe.o: src/ui/tilesframe.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_tilesframe.o -c src/ui/tilesframe.cpp $(CFLAGS)

compile/ui_worldwidget.o: src/ui/worldwidget.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_worldwidget.o -c src/ui/worldwidget.cpp $(CFLAGS)

compile/ui_waynetedit.o: src/ui/waynetedit.cpp Makefile include/ui.h
	- @mkdir -p compile
	$(CXX) -o compile/ui_waynetedit.o -c src/ui/waynetedit.cpp $(CFLAGS)

# Widgets
compile/widgets_scrollbar.o: src/widgets/scrollbar.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_scrollbar.o -c src/widgets/scrollbar.cpp $(CFLAGS)

compile/widgets_checkbox.o: src/widgets/checkbox.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_checkbox.o -c src/widgets/checkbox.cpp $(CFLAGS)

compile/widgets_radiobutton.o: src/widgets/radiobutton.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_radiobutton.o -c src/widgets/radiobutton.cpp $(CFLAGS)

compile/widgets_groupbox.o: src/widgets/groupbox.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_groupbox.o -c src/widgets/groupbox.cpp $(CFLAGS)

compile/widgets_combobox.o: src/widgets/combobox.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_combobox.o -c src/widgets/combobox.cpp $(CFLAGS)

compile/widgets_listwidget.o: src/widgets/listwidget.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_listwidget.o -c src/widgets/listwidget.cpp $(CFLAGS)

compile/widgets_dialog.o: src/widgets/dialog.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_dialog.o -c src/widgets/dialog.cpp $(CFLAGS)

compile/widgets_filedialog.o: src/widgets/filedialog.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_filedialog.o -c src/widgets/filedialog.cpp $(CFLAGS)

compile/widgets_slider.o: src/widgets/slider.cpp Makefile include/widgets.h
	- @mkdir -p compile
	$(CXX) -o compile/widgets_slider.o -c src/widgets/slider.cpp $(CFLAGS)

# Screens
compile/intro_screen.o: src/ui/intro_screen.cpp Makefile include/decker_sdl.h include/screens.h include/videoplayer.h
	- @mkdir -p compile
	$(CXX) -o compile/intro_screen.o -c src/ui/intro_screen.cpp $(CFLAGS)

compile/start_screen.o: src/ui/start_screen.cpp Makefile include/screens.h include/version.h
	- @mkdir -p compile
	$(CXX) -o compile/start_screen.o -c src/ui/start_screen.cpp $(CFLAGS)

compile/settings_screen.o: src/ui/settings_screen.cpp Makefile include/screens.h
	- @mkdir -p compile
	$(CXX) -o compile/settings_screen.o -c src/ui/settings_screen.cpp $(CFLAGS)

compile/level_screen.o: src/ui/level_screen.cpp Makefile include/screens.h
	- @mkdir -p compile
	$(CXX) -o compile/level_screen.o -c src/ui/level_screen.cpp $(CFLAGS)

# Video
compile/video_videoplayer.o: src/video/videoplayer.cpp Makefile include/videoplayer.h include/decker_sdl.h
	- @mkdir -p compile
	$(CXX) -o compile/video_videoplayer.o -c src/video/videoplayer.cpp $(CFLAGS)

# Audio
compile/audio_audiosystem.o: src/audio/audiosystem.cpp Makefile include/audio.h
	- @mkdir -p compile
	$(CXX) -o compile/audio_audiosystem.o -c src/audio/audiosystem.cpp $(CFLAGS)

compile/audio_audiostream.o: src/audio/audiostream.cpp Makefile include/audio.h
	- @mkdir -p compile
	$(CXX) -o compile/audio_audiostream.o -c src/audio/audiostream.cpp $(CFLAGS)

compile/audio_audiosample.o: src/audio/audiosample.cpp Makefile include/audio.h
	- @mkdir -p compile
	$(CXX) -o compile/audio_audiosample.o -c src/audio/audiosample.cpp $(CFLAGS)

compile/audio_audioinstance.o: src/audio/audioinstance.cpp Makefile include/audio.h
	- @mkdir -p compile
	$(CXX) -o compile/audio_audioinstance.o -c src/audio/audioinstance.cpp $(CFLAGS)

compile/audio_audiopool.o: src/audio/audiopool.cpp Makefile include/audio.h include/audiopool.h include/exceptions.h
	- @mkdir -p compile
	$(CXX) -o compile/audio_audiopool.o -c src/audio/audiopool.cpp $(CFLAGS)



# texmaker
compile/texm_main.o: tools/texmaker/main.cpp Makefile tools/texmaker/texmaker.h
	- @mkdir -p compile
	$(CXX) -o compile/texm_main.o -c tools/texmaker/main.cpp $(TEXMAKER_CFLAGS)

compile/texm_texture.o: tools/texmaker/texture.cpp Makefile tools/texmaker/texmaker.h
	- @mkdir -p compile
	$(CXX) -o compile/texm_texture.o -c tools/texmaker/texture.cpp $(TEXMAKER_CFLAGS)

compile/texm_texturefile.o: tools/texmaker/texturefile.cpp Makefile tools/texmaker/texmaker.h
	- @mkdir -p compile
	$(CXX) -o compile/texm_texturefile.o -c tools/texmaker/texturefile.cpp $(TEXMAKER_CFLAGS)

# fixbricks
compile/fixbricks_main.o: tools/fixbricks/main.cpp Makefile
	- @mkdir -p compile
	$(CXX) -o compile/fixbricks_main.o -c tools/fixbricks/main.cpp $(TEXMAKER_CFLAGS)


# mergeintro
compile/mergeintro_main.o: tools/mergeintro/main.cpp Makefile
	- @mkdir -p compile
	$(CXX) -o compile/mergeintro_main.o -c tools/mergeintro/main.cpp $(TEXMAKER_CFLAGS)
